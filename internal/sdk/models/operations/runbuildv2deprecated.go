// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"io"
	"net/http"
)

type RunBuildV2DeprecatedGlobals struct {
	AppID *string `pathParam:"style=simple,explode=false,name=appId"`
}

func (o *RunBuildV2DeprecatedGlobals) GetAppID() *string {
	if o == nil {
		return nil
	}
	return o.AppID
}

type RunBuildV2DeprecatedFile struct {
	FileName string `multipartForm:"name=file"`
	Content  []byte `multipartForm:"content"`
}

func (o *RunBuildV2DeprecatedFile) GetFileName() string {
	if o == nil {
		return ""
	}
	return o.FileName
}

func (o *RunBuildV2DeprecatedFile) GetContent() []byte {
	if o == nil {
		return []byte{}
	}
	return o.Content
}

type RunBuildV2DeprecatedRequestBody struct {
	File *RunBuildV2DeprecatedFile `multipartForm:"file"`
}

func (o *RunBuildV2DeprecatedRequestBody) GetFile() *RunBuildV2DeprecatedFile {
	if o == nil {
		return nil
	}
	return o.File
}

type RunBuildV2DeprecatedRequest struct {
	AppID       *string                         `pathParam:"style=simple,explode=false,name=appId"`
	BuildID     int                             `pathParam:"style=simple,explode=false,name=buildId"`
	RequestBody RunBuildV2DeprecatedRequestBody `request:"mediaType=multipart/form-data"`
}

func (o *RunBuildV2DeprecatedRequest) GetAppID() *string {
	if o == nil {
		return nil
	}
	return o.AppID
}

func (o *RunBuildV2DeprecatedRequest) GetBuildID() int {
	if o == nil {
		return 0
	}
	return o.BuildID
}

func (o *RunBuildV2DeprecatedRequest) GetRequestBody() RunBuildV2DeprecatedRequestBody {
	if o == nil {
		return RunBuildV2DeprecatedRequestBody{}
	}
	return o.RequestBody
}

type RunBuildV2DeprecatedResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Ok
	// The Close method must be called on this field, even if it is not used, to prevent resource leaks.
	ResponseStream io.ReadCloser
}

func (o *RunBuildV2DeprecatedResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *RunBuildV2DeprecatedResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *RunBuildV2DeprecatedResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *RunBuildV2DeprecatedResponse) GetResponseStream() io.ReadCloser {
	if o == nil {
		return nil
	}
	return o.ResponseStream
}
