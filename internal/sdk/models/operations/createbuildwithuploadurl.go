// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/hathora/ci/internal/sdk/models/shared"
	"net/http"
)

type CreateBuildWithUploadURLGlobals struct {
	AppID *string `pathParam:"style=simple,explode=false,name=appId"`
}

func (o *CreateBuildWithUploadURLGlobals) GetAppID() *string {
	if o == nil {
		return nil
	}
	return o.AppID
}

type CreateBuildWithUploadURLRequest struct {
	AppID             *string                  `pathParam:"style=simple,explode=false,name=appId"`
	CreateBuildParams shared.CreateBuildParams `request:"mediaType=application/json"`
}

func (o *CreateBuildWithUploadURLRequest) GetAppID() *string {
	if o == nil {
		return nil
	}
	return o.AppID
}

func (o *CreateBuildWithUploadURLRequest) GetCreateBuildParams() shared.CreateBuildParams {
	if o == nil {
		return shared.CreateBuildParams{}
	}
	return o.CreateBuildParams
}

type CreateBuildWithUploadURLResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse        *http.Response
	BuildWithUploadURL *shared.BuildWithUploadURL
}

func (o *CreateBuildWithUploadURLResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreateBuildWithUploadURLResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreateBuildWithUploadURLResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *CreateBuildWithUploadURLResponse) GetBuildWithUploadURL() *shared.BuildWithUploadURL {
	if o == nil {
		return nil
	}
	return o.BuildWithUploadURL
}
