// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/hathora/ci/internal/sdk/internal/utils"
	"time"
)

type OrgMember struct {
	LastLogin *time.Time `json:"lastLogin,omitempty"`
	JoinedAt  time.Time  `json:"joinedAt"`
	CreatedAt time.Time  `json:"createdAt"`
	InvitedBy string     `json:"invitedBy"`
	// A user's email.
	UserEmail string `json:"userEmail"`
	// System generated unique identifier for an organization. Not guaranteed to have a specific format.
	OrgID string `json:"orgId"`
}

func (o OrgMember) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(o, "", false)
}

func (o *OrgMember) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &o, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *OrgMember) GetLastLogin() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastLogin
}

func (o *OrgMember) GetJoinedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.JoinedAt
}

func (o *OrgMember) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *OrgMember) GetInvitedBy() string {
	if o == nil {
		return ""
	}
	return o.InvitedBy
}

func (o *OrgMember) GetUserEmail() string {
	if o == nil {
		return ""
	}
	return o.UserEmail
}

func (o *OrgMember) GetOrgID() string {
	if o == nil {
		return ""
	}
	return o.OrgID
}
