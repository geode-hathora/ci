// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/hathora/ci/internal/sdk/internal/utils"
	"time"
)

type PendingOrgInvite struct {
	CreatedAt time.Time `json:"createdAt"`
	InvitedBy string    `json:"invitedBy"`
	// A user's email.
	UserEmail string `json:"userEmail"`
	// System generated unique identifier for an organization. Not guaranteed to have a specific format.
	OrgID string `json:"orgId"`
}

func (p PendingOrgInvite) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PendingOrgInvite) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PendingOrgInvite) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *PendingOrgInvite) GetInvitedBy() string {
	if o == nil {
		return ""
	}
	return o.InvitedBy
}

func (o *PendingOrgInvite) GetUserEmail() string {
	if o == nil {
		return ""
	}
	return o.UserEmail
}

func (o *PendingOrgInvite) GetOrgID() string {
	if o == nil {
		return ""
	}
	return o.OrgID
}
